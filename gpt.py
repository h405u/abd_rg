import base64
import requests

# OpenAI API Key
api_key = ""

# Function to encode the image
def encode_image(image_path):
  with open(image_path, "rb") as image_file:
    return base64.b64encode(image_file.read()).decode('utf-8')

# Path to your image
image_path = "assets/images/output_image_7.png"

# Getting the base64 string
base64_image = encode_image(image_path)

headers = {
  "Content-Type": "application/json",
  "Authorization": f"Bearer {api_key}"
}

payload = {
  "model": "gpt-4o",
  "messages": [
    {
      "role": "user",
      "content": [
        {
          "type": "text",
          # "text": "you are given an image of with a shortside length of 28x2 and a longside length of 28x12. along the shortside you can see two handwritten digits from MNIST, and they each represent a digit. a sentence is a list of words. each distinct word is uniquely embedded as K=2 digits. so you are essentially given a sentence of length 12. can the sentence be generated by right regular GRAMMAR = {'S0': [('',), ('a0', 'S1')], 'S1': [('a0', 'S2'),], 'S2': [('a1', 'S0'),]}?"
          # "text": "what can you see"
          "text": "You are given a 96x384 image composed of 36 individual 32x32 images arranged in a grid format. These images fall into 10 categories: Airplane, Automobile, Bird, Cat, Deer, Dog, Frog, Horse, Ship, Truck. Each row of 3 images corresponds to a unique word, resulting in a 12-word sentence. This sentence is generated by a right regular grammar. Derive the grammar with: (1) Start terminal: S0 (2) A total of 3 terminals, 2 non-terminals, and 4 production rules. Grammar should be in the format: {'S0': [('',), ('a0', 'S1')], 'S1': [('a1', 'S0')]}"
        },
        {
          "type": "image_url",
          "image_url": {
            "url": f"data:image/jpeg;base64,{base64_image}",
            "detail": "high"
          }
        }
      ]
    }
  ],
  "max_tokens": 1000
}

response = requests.post("https://api.openai.com/v1/chat/completions", headers=headers, json=payload)

print(response.json())
